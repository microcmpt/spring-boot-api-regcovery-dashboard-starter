group 'com.github.microcmpt'
version '1.0.2'

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    maven { url aliyunMavenUrl }
    maven { url snapshotsMaven }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.20'
    compileOnly 'javax.servlet:javax.servlet-api:3.1.0'
    compile group: 'com.google.guava', name: 'guava', version: '23.0'
    compile(group: 'org.apache.zookeeper', name: 'zookeeper', version: '3.4.10') {
        exclude(module: 'slf4j-log4j12')
    }
    compile group: 'com.101tec', name: 'zkclient', version: '0.10'
    compile 'org.webjars:webjars-locator:0.31'
    compile 'org.webjars:bootstrap:3.3.7-1'
    compile 'org.webjars:jquery:3.1.1'
    compile "org.springframework.boot:spring-boot-starter-freemarker:1.5.10.RELEASE"
    compile "org.springframework.boot:spring-boot-starter-actuator:1.5.10.RELEASE"
}

uploadArchives {
    repositories {
        mavenDeployer {
            //为Pom文件做数字签名
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
            pom.project {
                name project.name
                packaging 'jar'
                description 'api-regcovery web control that adds, deletes, and checks services.'
                url 'https://microcmpt.github.io'

                scm {
                    url 'https://github.com/microcmpt/spring-boot-api-regcovery-dashboard-starter'
                    connection 'git@github.com:microcmpt/spring-boot-api-regcovery-dashboard-starter.git'
                    developerConnection 'git@github.com:microcmpt/spring-boot-api-regcovery-dashboard-starter.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'xiapshen'
                        name 'Shen Xia ping'
                        email '1378127237@qq.com'
                    }
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

jar {
    manifest {
        attributes(
                'Built-By': 'Shen Xia ping',
                'Created-By': System.properties['java.version'] + " (" + System.properties['java.vendor'] + " " + System.properties['java.vm.version'] + ")",
                'Specification-Title': project.name,
                'Specification-Version': project.version,
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                "SwaggerUi-Version": project.version,
        )
    }
}